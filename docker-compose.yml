services:
  db:
    image: postgres:16-alpine
    container_name: db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: healthcare_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - healthcare-net

  auth-service:
    build: ./auth-service
    container_name: auth-service
    depends_on:
      - db
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/healthcare_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: TmV3U2VjcmV0S2V5Rm9yQXJjaGl2YWxTZXJ2aWNlSldUU2lnbmluZ1B1cnBvc2U
    networks:
      - healthcare-net

  patient-service:
    build: ./patient-service
    container_name: patient-service
    depends_on:
      - db
    ports:
      - "8082:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/healthcare_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: TmV3U2VjcmV0S2V5Rm9yQXJjaGl2YWxTZXJ2aWNlSldUU2lnbmluZ1B1cnBvc2U
    networks:
      - healthcare-net

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    depends_on:
      - auth-service
      - patient-service
    ports:
      - "8083:8080"
    environment:
      AUTH_SERVICE_URI: http://auth-service:8081
      PATIENT_SERVICE_URI: http://patient-service:8082

networks:
  healthcare-net:
    driver: bridge

volumes:
  postgres_data: